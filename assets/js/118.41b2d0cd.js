(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{500:function(v,_,t){"use strict";t.r(_);var e=t(2),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("前言")]),v._v(" "),t("p",[v._v("最近在"),t("a",{attrs:{href:"https://www.nowcoder.com/",target:"_blank",rel:"noopener noreferrer"}},[v._v("牛客网"),t("OutboundLink")],1),v._v("上刷前端相关的题目, 发现自己真的不堪一击, 菜的要死, 毕竟都是大厂出的题目, 在刷题的过程中同时也学到了不少的冷门知识（主要是自己做错的题目里的知识点）, 现在分享出来, 真的有用, 注意这里面内容纯理论")])]),v._v(" "),t("h2",{attrs:{id:"html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[v._v("#")]),v._v(" HTML")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("置换元素")]),v._v(": 浏览器根据元素的标签和属性来决定元素的具体显示内容")]),v._v(" "),t("li",[t("strong",[v._v("非置换元素")]),v._v(": 浏览器的大多数元素都是不可置换元素, 即其内容直接展示给浏览器")]),v._v(" "),t("li",[v._v("input 元素设置 readonly:true => 脚本无法修改 input 的值 （F）")]),v._v(" "),t("li",[v._v("input 元素设置 disabled:true => 脚本无法修改 input 的值（F）")]),v._v(" "),t("li",[v._v("input 元素设置 readonly:true => input 的值不会随表单提交（F）")]),v._v(" "),t("li",[v._v("input 元素设置 disabled:true => input 的值不会随表单提交（T）")]),v._v(" "),t("li",[v._v("DHTML 的动态样式作用: 使网页作者改变内容的外部特征而不强制用户再次下载全部内容")]),v._v(" "),t("li",[v._v("HTML5 获取某用户当前位置信息 => getCurrentPosition()")]),v._v(" "),t("li",[v._v("reflow(回流) => 对 DOM 树进行渲染, 修改 DOM 或修个元素的形状大小, 就会触发 reflow")]),v._v(" "),t("li",[v._v("enctype => 规定在发送发送服务器之前对表单数据进行编码的方式")])]),v._v(" "),t("p",[v._v("-- "),t("code",[v._v("application/x-www-form-urlencoded")]),v._v(" 在发送前边吗所有的字符\n-- "),t("code",[v._v("multipart/form-data")]),v._v(" 部队字符编码的使用包含文件上传控件表单, 必须包含的方式\n-- "),t("code",[v._v("text/plan")]),v._v(" 空格转换为 '+' 加号, 但不对特殊字符进行编码")]),v._v(" "),t("ul",[t("li",[v._v("htmlDoctype 告诉浏览器文档使用哪一种 html 或者 xhtml")]),v._v(" "),t("li",[v._v("不同文档模式（htmlDoctype）影响 css 内容呈现, 尤其是对盒模型")]),v._v(" "),t("li",[v._v("文档模式使得不同浏览器在混杂模式下差异大")])]),v._v(" "),t("h2",{attrs:{id:"css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[v._v("#")]),v._v(" CSS")]),v._v(" "),t("ul",[t("li",[v._v("当 "),t("code",[v._v("margin-top")]),v._v(" 、 "),t("code",[v._v("padding-top")]),v._v(" 的值是百分比时, 分别计算相对最近父级元素的 width, 相对最近父级元素的 width")]),v._v(" "),t("li",[t("code",[v._v("position: static")]),v._v(" => 无定位")]),v._v(" "),t("li",[t("code",[v._v("position: absolute")]),v._v(" => 绝对定位")]),v._v(" "),t("li",[t("code",[v._v("position: fixed")]),v._v(" => 相对窗口的固定定位")]),v._v(" "),t("li",[t("code",[v._v("position: relative")]),v._v(" => 相对定位")]),v._v(" "),t("li",[v._v("mozilla(gecko) 内核 => 浏览器: firefox、flock 等 => css 兼容前缀: "),t("code",[v._v("-moz")])]),v._v(" "),t("li",[v._v("webkit 内核 => 浏览器: safari、chrome 等 => css 兼容前缀: "),t("code",[v._v("-webkit")])]),v._v(" "),t("li",[v._v("opera 内核 => 浏览器: opera 等 => css 兼容前缀: "),t("code",[v._v("-o")])]),v._v(" "),t("li",[v._v("trident 内核 => 浏览器: ie 等 => css 兼容前缀: "),t("code",[v._v("-ms")])]),v._v(" "),t("li",[v._v("选择器优先级: ID 选择器>class选择器=伪类选择器>标签名陈选择器")]),v._v(" "),t("li",[v._v("在不涉及样式情况下, 页面元素的优先显示与结构摆放顺序无关（F）")])]),v._v(" "),t("h2",{attrs:{id:"javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[v._v("#")]),v._v(" JavaScript")]),v._v(" "),t("ul",[t("li",[v._v("Promise 的三种状态")])]),v._v(" "),t("p",[v._v("-- 异步操作（未完成）=> "),t("code",[v._v("pending")]),v._v("\n-- 异步操作（已完成）=> "),t("code",[v._v("resolved")]),v._v(" (又称 "),t("code",[v._v("fulfilled")]),v._v(" )\n-- 异步操作（失 败） => "),t("code",[v._v("rejected")]),v._v("\n-- 状态改变只能是 "),t("code",[v._v("pending")]),v._v(" => "),t("code",[v._v("resolved")]),v._v(" 或者 "),t("code",[v._v("pending")]),v._v(" => "),t("code",[v._v("rejected")]),v._v("\n-- 状态一旦改变就不能再次进行改变")]),v._v(" "),t("ul",[t("li",[v._v("JavaScript 基本数据类型: String、Boolean、Null、Number、undefind")]),v._v(" "),t("li",[v._v("JavaScript 复杂数据类型: Object、Array、Function、RegExp、Date、Error")]),v._v(" "),t("li",[v._v("JavaScript 全局数据类型: Math")]),v._v(" "),t("li",[v._v("JavaScript 全局函数: escape()、eval()、isFinte()、isNaN()、parseFloat()、parseInt()、unescape()")]),v._v(" "),t("li",[v._v("JavaScript 异步编程")])]),v._v(" "),t("p",[v._v("-- "),t("code",[v._v("回调函数")]),v._v(" : 这是异步编程最基本的方法\n-- "),t("code",[v._v("事件监听")]),v._v(" : 另一种思路是采用事件驱动模式, 任务的执行不取决于代码的顺序, 而取决于某事件是否发生\n-- "),t("code",[v._v("发布/订阅")]),v._v(' : 上一节的"事件", 完全可以理解成"信号"\n-- '),t("code",[v._v("Promise 对象")]),v._v(" : Promise 对象是 CommanJS 工作组提出的一种规范, 目的是为异步编程提供统一接口")]),v._v(" "),t("ul",[t("li",[v._v("RegExp 对象三个方法 => "),t("code",[v._v("test()")]),v._v(" 、 "),t("code",[v._v("exec()")]),v._v(" 、 "),t("code",[v._v("compile()")])]),v._v(" "),t("li",[v._v("JavaScript 内置对象: Arguments（函数参数集合）、Array（数组）、Boolean（布尔）、Date（日期）、Error（异常）、Function（函数）、Math（数学）、Number（数值）、Object（基础）、String（字符串）、RegExp（正则表达式）")]),v._v(" "),t("li",[t("code",[v._v("history.length")]),v._v(" 返回浏览器你是列表的 URL 的数量")]),v._v(" "),t("li",[t("code",[v._v("history.back()")]),v._v(" 加载 history 列表的前一个 URL")]),v._v(" "),t("li",[t("code",[v._v("history.forward()")]),v._v(" 加载 history 列表的下一个 URL")]),v._v(" "),t("li",[t("code",[v._v("history.go()")]),v._v(" 加载 history 列表中的某个具体页面")]),v._v(" "),t("li",[v._v("call 与 apply 都属于 Function.prototype 的一个方法, 所以每一个 Function 实例都有 call、apply 属性")]),v._v(" "),t("li",[v._v("call 第一个参数是 this, 传递给函数的参数必须逐个列举出来；apply 传递函数的参数是数组, 就是多个参数组合成一个数组传入")]),v._v(" "),t("li",[v._v("call 传入的是直接参数列表, 可见一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象")]),v._v(" "),t("li",[v._v("跨域 => 浏览器不会将存在跨域限制的服务端口响应正常交给客户端代码去处理")]),v._v(" "),t("li",[t("code",[v._v("hasOwnproperty()")]),v._v(" => 判断一个对象是否包含有属性或者对象")]),v._v(" "),t("li",[t("code",[v._v("isPrototypeOf()")]),v._v(" => 判断检查其原型链对象是否存在于指定对象中")]),v._v(" "),t("li",[v._v("把鼠标一定到按钮上点击, 发生 => hover -> focus -> active")]),v._v(" "),t("li",[v._v("Ajax 的优势在于开放性、易用性及易于开发")]),v._v(" "),t("li",[v._v("Flash 的优势在于多媒体处理, 可以更容易地调用浏览器之外的外部资源")]),v._v(" "),t("li",[v._v("Ajax 最主要的批评就是他可能坏浏览器地后退功能")]),v._v(" "),t("li",[v._v("Flash 文件经常会很大, 用户第一次使用的是否需要让来的时间较长")])]),v._v(" "),t("h2",{attrs:{id:"构建工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建工具"}},[v._v("#")]),v._v(" 构建工具")]),v._v(" "),t("h3",{attrs:{id:"gulp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gulp"}},[v._v("#")]),v._v(" gulp")]),v._v(" "),t("p",[v._v("gulp 强调的是前端开发的工作流程, 我们可以通过配置一系列的 task, 定义 task 处理的事务（例如文件压缩合并、雪碧图、启动 server、版本控制等）, 然后定义执行顺序, 来让 gulp 执行这些task, 从而构建项目的整个前端开发流程。")]),v._v(" "),t("p",[v._v("PS: 简单说就一个Task Runner")]),v._v(" "),t("h3",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[v._v("#")]),v._v(" webpack")]),v._v(" "),t("p",[v._v("webpack 是一个前端模块化方案, 更侧重模块打包, 我们可以把开发中的所有资源（图片、js 文件、css 文件等）都看成模块, 通过 loader（加载器）和 plugins（插件）对资源进行处理, 打包成符合生产环境部署的前端资源。")]),v._v(" "),t("p",[v._v("PS: webpack is a module bundle")]),v._v(" "),t("h3",{attrs:{id:"两者区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两者区别"}},[v._v("#")]),v._v(" 两者区别")]),v._v(" "),t("p",[v._v("虽然都是前端自动化构建工具, 但看他们的定位就知道不是对等的。gulp与webpack上是互补的, 还是可替换的, 取决于你项目的需求\ngulp 严格上讲, 模块化不是他强调的东西, 他旨在规范前端开发流程。\nwebpack 更是明显强调模块化开发, 而那些文件压缩合并、预处理等功能, 不过是他附带的功能。")]),v._v(" "),t("h2",{attrs:{id:"版本控制工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本控制工具"}},[v._v("#")]),v._v(" 版本控制工具")]),v._v(" "),t("h3",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[v._v("#")]),v._v(" GIT")]),v._v(" "),t("p",[v._v("Git 是一个分布式版本控制系统, 操作命令包括: clone, pull, push, branch , merge , push, rebase, Git擅长的是程序代码的版本化管理。")]),v._v(" "),t("h3",{attrs:{id:"svn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#svn"}},[v._v("#")]),v._v(" SVN")]),v._v(" "),t("p",[v._v("SVN 是一个集中式版本控制系统, SVN只能有一个指定中央版本库。当这个中央版本库有问题时, 所有工作成员都一起瘫痪直到版本库维修完毕或者新的版本库设立完成")]),v._v(" "),t("h3",{attrs:{id:"两者区别-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两者区别-2"}},[v._v("#")]),v._v(" 两者区别")]),v._v(" "),t("p",[v._v("Git 与 SVN 区别点:")]),v._v(" "),t("ul",[t("li",[v._v("GIT 是分布式的, SVN 不是: 这是 GIT 和其它非分布式的版本控制系统, 例如 SVN, CVS 等, 最核心的区别。")]),v._v(" "),t("li",[v._v("GIT 把内容按元数据方式存储, 而 SVN 是按文件: 所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn, .cvs等的文件夹里。")]),v._v(" "),t("li",[v._v("GIT 分支和 SVN 的分支不同: 分支在 SVN 中一点不特别, 就是版本库中的另外的一个目录。")]),v._v(" "),t("li",[v._v("GIT 没有一个全局的版本号, 而 SVN 有: 目前为止这是跟 SVN 相比 GIT 缺少的最大的一个特征。")]),v._v(" "),t("li",[v._v("GIT 的内容完整性要优于 SVN: GIT 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性, 确保在遇到磁盘故障和网络问题时降低对版本库的破坏。")]),v._v(" "),t("li",[v._v("是通过.git和.svn文件, .git只是在本地的版本库的目录下存在, 而.svn存在于每一个文件夹, 当我们不需要版本控制的时候, 要删除.svn很费时。")])]),v._v(" "),t("h2",{attrs:{id:"网络基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络基础"}},[v._v("#")]),v._v(" 网络基础")]),v._v(" "),t("ul",[t("li",[v._v("HTTP 协议所使用的运输层协议是 "),t("code",[v._v("TCP/IP")])]),v._v(" "),t("li",[v._v("HTTPS 的默认端口号是 "),t("code",[v._v("443")])]),v._v(" "),t("li",[v._v("TCP 注重数据可靠性, UDP 注重数据传输快")]),v._v(" "),t("li",[v._v("传输层提供端对端的可靠文传递和错误恢复")]),v._v(" "),t("li",[v._v("DNS 协议大多数运行在 "),t("code",[v._v("UDP")]),v._v(" 协议上")]),v._v(" "),t("li",[v._v("DNS 的默认端口号是 "),t("code",[v._v("53")])]),v._v(" "),t("li",[v._v("HTTP 工作于应用层, HTTPS 工作于传输层")])]),v._v(" "),t("h2",{attrs:{id:"进程和线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程"}},[v._v("#")]),v._v(" 进程和线程")]),v._v(" "),t("ul",[t("li",[v._v("进程是资源分配的最小单位")]),v._v(" "),t("li",[v._v("线程是资源调度的最小单位")]),v._v(" "),t("li",[v._v("进程是动态的、多个进程可以包含相同的程序和多个进程可以进行并发运行")])]),v._v(" "),t("h2",{attrs:{id:"算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[v._v("#")]),v._v(" 算法")]),v._v(" "),t("ul",[t("li",[v._v("排序算法: 插入排序、希尔排序、冒泡排序、堆排序、归并排序、快速排序、选择排序")]),v._v(" "),t("li",[v._v("排序算法不稳定的有: 希尔排序、堆排序、快速排序、选择排序")])])])}),[],!1,null,null,null);_.default=a.exports}}]);