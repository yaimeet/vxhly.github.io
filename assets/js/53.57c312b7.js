(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{438:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("前言")]),s._v(" "),t("p",[s._v("目前, 社区有多种 Commit message 的写法规范。本文介绍 "),t("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0",target:"_blank",rel:"noopener noreferrer"}},[s._v("Angular 规范"),t("OutboundLink")],1),s._v(" 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 "),t("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#toc10",target:"_blank",rel:"noopener noreferrer"}},[s._v("Angular.js"),t("OutboundLink")],1),s._v(" 采用的就是该规范")])]),s._v(" "),t("h2",{attrs:{id:"commit-message-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-的作用"}},[s._v("#")]),s._v(" Commit message 的作用")]),s._v(" "),t("h3",{attrs:{id:"提供更多的历史信息-方便快速浏览。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提供更多的历史信息-方便快速浏览。"}},[s._v("#")]),s._v(" 提供更多的历史信息, 方便快速浏览。")]),s._v(" "),t("p",[s._v("比如, 下面的命令显示上次发布后的变动, 每个 commit 占据一行。你只看行首, 就知道某次 commit 的目的。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("last tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" HEAD --pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("format:%s\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"可以过滤某些-commit（比如文档改动）-便于快速查找信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以过滤某些-commit（比如文档改动）-便于快速查找信息"}},[s._v("#")]),s._v(" 可以过滤某些 commit（比如文档改动）, 便于快速查找信息")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("last release"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" HEAD --grep feature\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"可以直接从-commit-生成-change-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以直接从-commit-生成-change-log"}},[s._v("#")]),s._v(" 可以直接从 commit 生成 Change log")]),s._v(" "),t("p",[s._v("Change Log 是发布新版本时, 用来说明与上一个版本差异的文档, 详见后文")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://oss-blog.test.upcdn.net/git-commit-1.png",alt:"Change Log"}})]),s._v(" "),t("h3",{attrs:{id:"其他优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他优点"}},[s._v("#")]),s._v(" 其他优点")]),s._v(" "),t("ul",[t("li",[s._v("可读性好, 清晰, 不必深入看代码即可了解当前 commit 的作用。")]),s._v(" "),t("li",[s._v("为 Code Reviewing 做准备")]),s._v(" "),t("li",[s._v("方便跟踪工程历史")]),s._v(" "),t("li",[s._v("让其他的开发者在运行 git blame 的时候想跪谢")]),s._v(" "),t("li",[s._v("提高项目的整体质量, 提高个人工程素质")])]),s._v(" "),t("h2",{attrs:{id:"commit-message-的格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-的格式"}},[s._v("#")]),s._v(" Commit message 的格式")]),s._v(" "),t("p",[s._v("每次提交, Commit message 都包括三个部分: header, body 和 footer。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("scope"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("subject"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BLANK LINE"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BLANK LINE"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("footer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("其中, header 是必需的, body 和 footer 可以省略。 不管是哪一个部分, 任何一行都不得超过 72 个字符（或 100 个字符）。这是为了避免自动换行影响美观。")]),s._v(" "),t("h3",{attrs:{id:"header"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[s._v("#")]),s._v(" Header")]),s._v(" "),t("p",[s._v("Header 部分只有一行, 包括三个字段: type（必需）、scope（可选）和 subject（必需）。")]),s._v(" "),t("h4",{attrs:{id:"type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[s._v("#")]),s._v(" type")]),s._v(" "),t("p",[s._v("用于说明 commit 的类别, 只允许使用下面 7 个标识。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("feat")]),s._v(": 一项新功能")]),s._v(" "),t("li",[t("strong",[s._v("fix")]),s._v(": 修复一个 bug")]),s._v(" "),t("li",[t("strong",[s._v("docs")]),s._v(": 仅仅修改文档（documentation）")]),s._v(" "),t("li",[t("strong",[s._v("style")]),s._v(":  不影响代码含义的更改（空格, 格式, 缺少分号等）")]),s._v(" "),t("li",[t("strong",[s._v("refactor")]),s._v(": 重构（即不是新增功能, 也不是修改 bug 的代码变动）")]),s._v(" "),t("li",[t("strong",[s._v("perf")]),s._v(": 改进性能的代码更改")]),s._v(" "),t("li",[t("strong",[s._v("test")]),s._v(": 添加缺失测试或更正现有测试")]),s._v(" "),t("li",[t("strong",[s._v("build")]),s._v(": 影响构建系统或外部依赖项的更改（示例范围: gulp, broccoli, npm）")]),s._v(" "),t("li",[t("strong",[s._v("ci")]),s._v(": 对CI配置文件和脚本的更改（示例范围: Travis, Circle, BrowserStack, SauceLabs）")]),s._v(" "),t("li",[t("strong",[s._v("chore")]),s._v(": 其他不修改src或测试文件的更改")]),s._v(" "),t("li",[t("strong",[s._v("revert")]),s._v(": 恢复之前的提交（即回滚）")])]),s._v(" "),t("p",[s._v("如果 type 为 "),t("code",[s._v("feat")]),s._v(" 和 "),t("code",[s._v("fix")]),s._v(" , 则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定, 要不要放入 Change log, 建议是不要。")]),s._v(" "),t("h4",{attrs:{id:"scope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[s._v("#")]),s._v(" scope")]),s._v(" "),t("p",[s._v("scope 用于说明 commit 影响的范围, 比如数据层、控制层、视图层等等, 视项目不同而不同。")]),s._v(" "),t("p",[s._v("例如在 Angular, 可以是 $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView 等。")]),s._v(" "),t("p",[s._v("如果你的修改影响了不止一个 scope, 你可以使用 "),t("code",[s._v("*")]),s._v(" 代替。")]),s._v(" "),t("h4",{attrs:{id:"subject"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subject"}},[s._v("#")]),s._v(" subject")]),s._v(" "),t("p",[s._v("subject 是 commit 目的的简短描述, 不超过 50 个字符。")]),s._v(" "),t("p",[s._v("其他注意事项:")]),s._v(" "),t("ul",[t("li",[s._v("以动词开头, 使用第一人称现在时, 比如 change, 而不是 changed 或 changes")]),s._v(" "),t("li",[s._v("第一个字母小写")]),s._v(" "),t("li",[s._v("结尾不加句号（.）")])]),s._v(" "),t("h3",{attrs:{id:"body"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[s._v("#")]),s._v(" Body")]),s._v(" "),t("p",[s._v("Body 部分是对本次 commit 的详细描述, 可以分成多行。下面是一个范例。")]),s._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[s._v("More detailed explanatory text, if necessary. Wrap it to\nabout 72 characters or so.\n\nFurther paragraphs come after blank lines.\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v(" Bullet points are okay, too\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[s._v("*")]),s._v(" Use a hanging indent\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("有两个注意点:")]),s._v(" "),t("ul",[t("li",[s._v("使用第一人称现在时, 比如使用 change 而不是 changed 或 changes。")]),s._v(" "),t("li",[s._v("永远别忘了第 2 行是空行")]),s._v(" "),t("li",[s._v("应该说明代码变动的动机, 以及与以前行为的对比。")])]),s._v(" "),t("h3",{attrs:{id:"footer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#footer"}},[s._v("#")]),s._v(" Footer")]),s._v(" "),t("p",[s._v("Footer 部分只用于以下两种情况:")]),s._v(" "),t("h4",{attrs:{id:"不兼容变动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不兼容变动"}},[s._v("#")]),s._v(" 不兼容变动")]),s._v(" "),t("p",[s._v("如果当前代码与上一个版本不兼容, 则 Footer 部分以 BREAKING CHANGE 开头, 后面是对变动的描述、以及变动理由和迁移方法。")]),s._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[s._v("BREAKING CHANGE: isolate scope bindings definition has changed.\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    To migrate the code follow the example below:")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    Before:")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    scope: {\n      myAttr: 'attribute',\n    }")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    After:")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    scope: {\n      myAttr: '@',\n    }")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[s._v("    The removed `inject` wasn't generaly useful for directives so there should be no code using it.")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h4",{attrs:{id:"关闭-issue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭-issue"}},[s._v("#")]),s._v(" 关闭 Issue")]),s._v(" "),t("p",[s._v("如果当前 commit 针对某个 issue, 那么可以在 Footer 部分关闭这个 issue 。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Closes "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#234")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[s._v("#")]),s._v(" Revert")]),s._v(" "),t("p",[s._v("还有一种特殊情况, 如果当前 commit 用于撤销以前的 commit, 则必须以 revert: 开头, 后面跟着被撤销 Commit 的 Header。")]),s._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[s._v("revert: feat(pencil): add 'graphiteWidth' option\n\nThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("Body 部分的格式是固定的, 必须写成 "),t("code",[s._v("This reverts commit <hash>")]),s._v(" ., 其中的 hash 是被撤销 commit 的 SHA 标识符。")]),s._v(" "),t("p",[s._v("如果当前 commit 与被撤销的 commit, 在同一个发布（release）里面, 那么它们都不会出现在 Change log 里面。如果两者在不同的发布, 那么当前 commit, 会出现在 Change log 的 Reverts 小标题下面。")]),s._v(" "),t("h2",{attrs:{id:"commitizen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[s._v("#")]),s._v(" Commitizen")]),s._v(" "),t("p",[s._v("可以使用典型的 git 工作流程或通过使用 CLI 向导 Commitizen 来添加提交消息格式。")]),s._v(" "),t("p",[s._v("安装")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g commitizen\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后, 在项目目录里, 运行下面的命令, 使其支持 Angular 的 Commit message 格式。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("commitizen init cz-conventional-changelog --save --save-exact\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("以后, 凡是用到 "),t("code",[s._v("git commit")]),s._v(" 命令, 一律改为使用 "),t("code",[s._v("git cz")]),s._v(" 。这时, 就会出现选项, 用来生成符合格式的 Commit message。")]),s._v(" "),t("h2",{attrs:{id:"生成-change-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成-change-log"}},[s._v("#")]),s._v(" 生成 Change log")]),s._v(" "),t("p",[s._v("如果你的所有 Commit 都符合 Angular 格式, 那么发布新版本时, Change log 就可以用脚本自动生成。生成的文档包括以下三个部分:")]),s._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[s._v("New features\n\nBug fixes\n\nBreaking changes.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("每个部分都会罗列相关的 commit , 并且有指向这些 commit 的链接。当然, 生成的文档允许手动修改, 所以发布前, 你还可以添加其他内容。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/ajoslin/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[s._v("conventional-changelog"),t("OutboundLink")],1),s._v(" 就是生成 Change log 的工具, 运行下面的命令即可。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g conventional-changelog-cli\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" my-project\nconventional-changelog -p angular -i CHANGELOG.md -s -r "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("当然你也可以在你的 "),t("code",[s._v("package.json")]),s._v(" 中添加快捷 script")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"changelog"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conventional-changelog -p angular -i src/CHANGELOG.md -s -r 0"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);