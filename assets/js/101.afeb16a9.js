(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{483:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("前言")]),s._v(" "),a("p",[s._v("众所周知 CSS 技术我们虽然很熟悉, 在使用的过程却很容易被困住, 这让我们在新问题出现的时候变得很不利。 所以本文将介绍 CSS 中会用到的几个度量单位")])]),s._v(" "),a("h2",{attrs:{id:"rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[s._v("#")]),s._v(" rem")]),s._v(" "),a("p",[s._v("首先介绍下和我们熟悉的很相似的货。 "),a("code",[s._v("em")]),s._v(" 被定义为相对于当前对象内文本的字体大小。 炒个栗子, 如果你给 "),a("code",[s._v("body")]),s._v(" 小哥设置了 "),a("code",[s._v("font-size")]),s._v(" 字体大小, 那么 "),a("code",[s._v("body")]),s._v(" 小哥的任何子元素的 "),a("code",[s._v("1 em")]),s._v(" 就是等于 "),a("code",[s._v("body")]),s._v(" 设置的 "),a("code",[s._v("font-size")]),s._v(" 。")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("Test"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("body")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 14px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1.2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* calculated at 14px * 1.2, or 16.8px */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这里 div 这娃的字体大小是 1.2em。 解释来说, 就是他从 body 爹爹那里继承的字体大小（这里是 14px）的 1.2 倍, 结果就是 16.8px。")]),s._v(" "),a("p",[s._v("但是, 如果你用 em 一层一层级联得定义嵌套元素的字体大小又会花生什么事情呢？ 在下面这一小段代码里我们应用了和上面一样一样的 CSS, 每一个 div 都从它上一级父元素继承了字体大小, 并且逐渐得增加。")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        Test\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 14 * 1.2 = 16.8px --\x3e")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n            Test\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 16.8 * 1.2 = 20.16px --\x3e")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n                Test\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 20.16 * 1.2 = 24.192px --\x3e")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("虽然在某些地方这正是我们想要的, 但是通常情况下我们还是希望就依赖单一的相对度量单位就好。 这时候嘛, 我们就可以使用 "),a("code",[s._v("rem")]),s._v(" 了。 "),a("code",[s._v("‘r’")]),s._v(" 是 "),a("code",[s._v("'root")]),s._v(" 的缩写, 意思就是 "),a("code",[s._v("1rem")]),s._v(" 等于根元素的字体大小; 大部分情况下, 根元素就是 "),a("code",[s._v("<html>")]),s._v(" 元素了。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("html")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 14px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1.2rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这样在上面的那三个嵌套的 div 娃们的字体大小都是 "),a("code",[s._v("1.2*14px = 16.8px")]),s._v(" 了。")]),s._v(" "),a("h2",{attrs:{id:"适用于网格布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用于网格布局"}},[s._v("#")]),s._v(" 适用于网格布局")]),s._v(" "),a("p",[a("code",[s._v("Rems")]),s._v(" 不仅仅只是在设置字体大小上很方便。 再炒个栗子, 你可以用基于 html 根元素字体大小的 rem 作为整个网格布局或者 UI 库的大小单位, 然后在其他特定的地方用 em 单位。 这样将会给你带来更多的字体大小和伸缩的可控性,")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".container")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 70rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" // 70 * 14px = 980px\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("概念上来说, 这个方法的思想就是让你的界面根据你的内容进行缩放。 但是, 这样做并不是对所有的情况都有意义。")]),s._v(" "),a("h2",{attrs:{id:"vh-and-vw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vh-and-vw"}},[s._v("#")]),s._v(" vh and vw")]),s._v(" "),a("p",[s._v("响应式 Web 设计 离不开百分比。 但是, CSS 百分比并不是所有的问题的最佳解决方案。 CSS 的宽度是相对于包含它的最近的父元素的宽度的。 但是如果你就想用视口（ "),a("code",[s._v("viewpoint")]),s._v(" ）的宽度或者高度, 而不是父元素的, 那该肿么办？ 这就是 "),a("code",[s._v("vh")]),s._v(" 和 "),a("code",[s._v("vw")]),s._v(" 单位为我们提供的。")]),s._v(" "),a("p",[a("code",[s._v("1 vh")]),s._v(" 等于 "),a("code",[s._v("1/100")]),s._v(" 的视口高度。 栗子:  浏览器高度 "),a("code",[s._v("900px")]),s._v(" , "),a("code",[s._v("1 vh = 900px/100 = 9 px")]),s._v(" 。 同理, 如果视口宽度为 750, "),a("code",[s._v("1 vw = 750px/100 = 7.5 px")]),s._v(" 。")]),s._v(" "),a("p",[s._v("可以想象到的, 他们有很多很多的用途。 比如, 我们用很简单的方法只用一行 CSS 代码就实现同屏幕等高的框。")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".slide")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100vh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("假设你要来一个和屏幕同宽的标题, 你只要设置这个标题的 "),a("code",[s._v("font-size")]),s._v(" 的单位为 "),a("code",[s._v("vm")]),s._v(" , 那标题的字体大小就会自动根据浏览器的宽度进行缩放, 以达到字体和 "),a("code",[s._v("viewport")]),s._v(" 大小同步的效果, 有木有？ ！")]),s._v(" "),a("h2",{attrs:{id:"vmin-and-vmax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vmin-and-vmax"}},[s._v("#")]),s._v(" vmin and vmax")]),s._v(" "),a("p",[a("code",[s._v("vh")]),s._v(" 和 "),a("code",[s._v("vm")]),s._v(" 依据于视口的高度和宽度, 相对的, "),a("code",[s._v("vmin")]),s._v(" 和 "),a("code",[s._v("vmax")]),s._v(" 则关于视口高度和宽度两者的最小或者最大值。 比如, 浏览器的宽度设置为 1100px, 高度设置为 700px, "),a("code",[s._v("1vmin = 1px")]),s._v(" , "),a("code",[s._v("1vmax = 11px")]),s._v(" 。 如果宽度设置为 800px, 高度设置为 1080px, 1vmin 就等于 8px, 1vmax 则为 10.8px。")]),s._v(" "),a("p",[s._v("那么问题来了, 我们应该在什么场景下使用这两个单位呢？")]),s._v(" "),a("p",[s._v("假设有一个元素, 你需要让它始终在屏幕上可见。 只要对其高度和宽度使用 vmin 单位, 并赋予其低于 100 的值就可以做到了。 再来个栗子, 可以这样定义一个至少有两个边触摸到屏幕的方形:")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100vmin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100vmin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://oss-blog.test.upcdn.net/css-length-unit-1.png",alt:"CSS 度量单位"}})]),s._v(" "),a("p",[s._v("如果你要让这个方形框框始终铺满整个视口的可见区域（四边始终触摸到屏幕的四边）")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100vmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100vmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"http://oss-blog.test.upcdn.net/css-length-unit-2.png",alt:"CSS 度量单位"}})]),s._v(" "),a("p",[s._v("结合使用这些单位可以为我们提供一个新颖有意思的方式来灵活地利用我们视口的大小。")]),s._v(" "),a("h2",{attrs:{id:"ex-and-ch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-and-ch"}},[s._v("#")]),s._v(" ex and ch")]),s._v(" "),a("p",[a("code",[s._v("ex")]),s._v(" 和 "),a("code",[s._v("ch")]),s._v(" 单位, 类似于 "),a("code",[s._v("em")]),s._v(" 和 "),a("code",[s._v("rem")]),s._v(" , 依赖于当前的字体和字体大小。 但是, 不同的是, 这两货是基于字体的度量单位, 依赖于设定的字体。")]),s._v(" "),a("p",[a("code",[s._v("ch")]),s._v(" 单位通常被定义为数字 0 的宽度。 你可以在 "),a("code",[s._v("Eric Meyers")]),s._v(' 的博客里找到关于它的一些有意思的讨论, 例如将一个等宽字体的字母"N"的宽度设置为 '),a("code",[s._v("40ch")]),s._v(" , 那么在另一种类型的字体里它却可以包含 40 个字母。 这个单位的传统用途主要是盲文的排版, 但是除此之外, 肯定还有可以应用他的地方。")]),s._v(" "),a("p",[a("code",[s._v("ex")]),s._v(" 定义为当前字体的小写 x 字母的高度或者 1/2 的 1em 。 很多时候, 它是字体的中间标志。"),a("br")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://oss-blog.test.upcdn.net/css-length-unit-3.png",alt:"CSS 度量单位"}})]),s._v(" "),a("p",[s._v("这些单位有很多用途, 大部分用于版式的微调。 比方说, "),a("code",[s._v("sup")]),s._v(" 元素（上角文字标）, 可以通过 "),a("code",[s._v("position:relative;bottom: 1ex;")]),s._v(" 实现 。 类似的方法, 你可以实现一个下角文字标。 浏览器默认的方式是利用")]),s._v(" "),a("p",[s._v("上标和下标特定垂直对齐规则, 但是如果你想更细粒度更精确得控制, 你可以像下面这样做:")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("sup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("sub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" -1ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);